$(function() {
  var container_dimensions = {width: 700, height: 467},
      margins = {top: 20, right: 20, bottom: 20, left: 20},
      level_dimensions = {
        width: container_dimensions.width - margins.left - margins.right,
        height: container_dimensions.height - margins.top - margins.bottom
      },
      gridRows = 10,
      gridColumns = 10,
      x = d3.scale.linear().range([0, level_dimensions.width]),
      y = d3.scale.linear().range([level_dimensions.height, 0]),
      svg = d3.select("#level-content")
        .append("svg")
        .attr("height", container_dimensions.height)
        .attr("width", container_dimensions.width)
        .append("g")
        .attr("transform", "translate(" + margins.left + "," + margins.top + ")"),

      generateGrid = function(numWalls) {
        var i, j, lastY=0, grid = new Array(gridRows);
        for(i=0; i<gridRows; i++) {
          grid[i] = [];
          for(j=0; j<gridColumns; j++) {
            grid[i].push(0);
          }
        }

        for(i=0; i<numWalls; i++) {
          y += (Math.floor(Math.random() * gridRows - 2) + 1 - y)
          if (i % 2 === 0) {
            // Left wall
            for(i=0; i<gridColumns-2; i++) {
              grid[y][i] = 1;
            }
          } else {
            // Right wall
            for(i=2; i<gridColumns; i++) {
              grid[y][i] = 1;
            }
          }
        }
        return grid;
      },

      drawWalls = function() {
        var grid = generateGrid(3);
        var gridRows = svg.selectAll(".row").data(grid);
        gridRows.enter().append("g").attr("class", "row");
      };

      drawWalls();
});
