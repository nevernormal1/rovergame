$(function() {
  var container = RVR.container({}),
      grid = RVR.grid({
        parent: container.getElement(),
        dimensions: container.getLevelDimensions()
      }),

      rover = RVR.rover({
        container: container,
        grid: grid
      }),

      baseOffsetX = grid.offsetX(0),
      baseOffsetY = grid.offsetY(0),
      goal = {x: grid.getColumnCount() - 1, y: grid.getRowCount() - 1},
      goalReached = false,

      animatedRender = function() {
        d3.transition()
          .duration(750)
          .each(render);
      },

      render = function() {
        grid.render();
        rover.render();

        var goalSelection = container.getElement().selectAll(".goal").data([goal]);
        goalSelection.enter()
          .append("circle")
          .attr("class", "goal")
          .attr("r", grid.getCellWidth() / 4)
          .attr("cx", baseOffsetX)
          .attr("cy", baseOffsetY);
      },

      reachedGoal = function() {
        var position = rover.getPosition();
        if (position.x === goal.x && position.y === goal.y) return true;
        return false;
      },

      endLevel = function() {
        goalReached = true;
        $("#goal-reached").modal('show');
      },

      moveRover = function(coordinate, direction) {
        if (reachedGoal()) {
          endLevel();
        }

        rover.updatePosition();
      },

      updateScene = function() {
        moveRover();
        if (!goalReached) {
          setTimeout(function() { updateScene(); }, RVR.transitionDuration);
        }
      },

      generate = function() {
        rover.reset();
        grid.reset();
        animatedRender();
      };

    $("#generate").click(function() {
      generate();
    });

    $(".move").click(function() {
      var action = $(this).attr("data-action");
      if (action.indexOf("on") > -1) {
        rover.setCruise(true);
      } else {
        rover.setCruise(false);
      }
    });

    $(".rotate").click(function() {
      rover.rotate(-90);
    });

    generate();

    setTimeout(function() { updateScene() }, RVR.transitionDuration);
});
